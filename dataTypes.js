 {/*
 In JavaScript, there are several data types:
 Primitive Data Types:

Number: Represents numeric values, including integers and floating-point numbers.
String: Represents textual data, enclosed within single or double quotes.
Boolean: Represents a logical value, either true or false.
Undefined: Represents a variable that has been declared but not assigned a value.
Null: Represents the intentional absence of any object value.
Symbol: Introduced in ECMAScript 6, represents a unique and immutable value that may be used as the key of an object property.

Numbers - Integers, floats
Strings - Any data under single quote, double quote or backtick quote
Booleans - true or false value
Null - empty value or no value
Undefined - a declared variable without a value
Symbol - A unique value that can be generated by Symbol constructor

Non-primitive Data Types (Reference Types, object Reference):

Object: Represents a collection of key-value pairs, where keys are strings (or Symbols) and values can be any data type, including other objects.
Array: A special type of object that represents a collection of elements indexed by non-negative integers.
Function: A callable object that executes a block of code when invoked.
Date: Represents a specific point in time, with methods to manipulate dates and times.
RegExp: Represents a regular expression object, used for pattern matching with strings.

Objects
Arrays
Now, let us see what exactly primitive and non-primitive data types mean.
 Primitive data types are immutable(non-modifiable) data types. 
 Once a primitive data type is created we cannot modify it.
 */}

//Create datatypes.js file and use the JavaScript typeof operator to check different data types. Check the data type of each variable

console.log(typeof 'Asabeneh') // string
console.log(typeof 5) // number
console.log(typeof true) // boolean
console.log(typeof null) // object type
console.log(typeof undefined) // undefined

